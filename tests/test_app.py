import pytest
from unittest.mock import Mock

def test_home(client):
    response = client.get("/")
    assert response.status == "200 OK"

def test_hook_setup(client, app):
    app.report = Mock()
    response = client.post("/webhook/hooksetup", json = {
      "zen": "Design for failure.",
      "hook_id": 350355494,
      "hook": {
        "type": "Repository",
        "id": 350355494,
        "name": "web",
        "active": True,
        "events": [
          "workflow_job"
        ],
        "config": {
          "content_type": "json",
          "insecure_ssl": "0",
          "url": "https://gha-timing.lab.element.dev/webhook/report-gha-timings"
        },
        "updated_at": "2022-03-28T16:08:12Z",
        "created_at": "2022-03-28T16:08:12Z",
        "url": "https://api.github.com/repos/michaelkaye/report-gha-timings/hooks/350355494",
        "test_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/hooks/350355494/test",
        "ping_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/hooks/350355494/pings",
        "deliveries_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/hooks/350355494/deliveries",
        "last_response": {
          "code": None,
          "status": "unused",
          "message": None
        }
      },
      "repository": {
        "id": 473941166,
        "node_id": "R_kgDOHD_Erg",
        "name": "report-gha-timings",
        "full_name": "michaelkaye/report-gha-timings",
        "private": False,
        "owner": {
          "login": "michaelkaye",
          "id": 1917473,
          "node_id": "MDQ6VXNlcjE5MTc0NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1917473?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/michaelkaye",
          "html_url": "https://github.com/michaelkaye",
          "followers_url": "https://api.github.com/users/michaelkaye/followers",
          "following_url": "https://api.github.com/users/michaelkaye/following{/other_user}",
          "gists_url": "https://api.github.com/users/michaelkaye/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/michaelkaye/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/michaelkaye/subscriptions",
          "organizations_url": "https://api.github.com/users/michaelkaye/orgs",
          "repos_url": "https://api.github.com/users/michaelkaye/repos",
          "events_url": "https://api.github.com/users/michaelkaye/events{/privacy}",
          "received_events_url": "https://api.github.com/users/michaelkaye/received_events",
          "type": "User",
          "site_admin": False
        },
        "html_url": "https://github.com/michaelkaye/report-gha-timings",
        "description": "Collects data on github action timings and saves to database",
        "fork": False,
        "url": "https://api.github.com/repos/michaelkaye/report-gha-timings",
        "forks_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/forks",
        "keys_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/teams",
        "hooks_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/hooks",
        "issue_events_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/issues/events{/number}",
        "events_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/events",
        "assignees_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/assignees{/user}",
        "branches_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/branches{/branch}",
        "tags_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/tags",
        "blobs_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/languages",
        "stargazers_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/stargazers",
        "contributors_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/contributors",
        "subscribers_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/subscribers",
        "subscription_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/subscription",
        "commits_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/contents/{+path}",
        "compare_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/merges",
        "archive_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/downloads",
        "issues_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/issues{/number}",
        "pulls_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/labels{/name}",
        "releases_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/releases{/id}",
        "deployments_url": "https://api.github.com/repos/michaelkaye/report-gha-timings/deployments",
        "created_at": "2022-03-25T09:12:24Z",
        "updated_at": "2022-03-28T13:02:27Z",
        "pushed_at": "2022-03-28T13:56:21Z",
        "git_url": "git://github.com/michaelkaye/report-gha-timings.git",
        "ssh_url": "git@github.com:michaelkaye/report-gha-timings.git",
        "clone_url": "https://github.com/michaelkaye/report-gha-timings.git",
        "svn_url": "https://github.com/michaelkaye/report-gha-timings",
        "homepage": None,
        "size": 8,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": "Python",
        "has_issues": True,
        "has_projects": True,
        "has_downloads": True,
        "has_wiki": True,
        "has_pages": False,
        "forks_count": 0,
        "mirror_url": None,
        "archived": False,
        "disabled": False,
        "open_issues_count": 0,
        "license": None,
        "allow_forking": True,
        "is_template": False,
        "topics": [
    
        ],
        "visibility": "public",
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      },
      "sender": {
        "login": "michaelkaye",
        "id": 1917473,
        "node_id": "MDQ6VXNlcjE5MTc0NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1917473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelkaye",
        "html_url": "https://github.com/michaelkaye",
        "followers_url": "https://api.github.com/users/michaelkaye/followers",
        "following_url": "https://api.github.com/users/michaelkaye/following{/other_user}",
        "gists_url": "https://api.github.com/users/michaelkaye/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/michaelkaye/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/michaelkaye/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelkaye/orgs",
        "repos_url": "https://api.github.com/users/michaelkaye/repos",
        "events_url": "https://api.github.com/users/michaelkaye/events{/privacy}",
        "received_events_url": "https://api.github.com/users/michaelkaye/received_events",
        "type": "User",
        "site_admin": False
      }
    })
    assert response.status == "200 OK"
def test_success_webhook(client, app):
    app.report = Mock()
    response = client.post("/webhook/test", json = {
      "action": "in_progress",
      "workflow_job": {
        "id": 2832853555,
        "run_id": 940463255,
        "run_url": "https://api.github.com/repos/octo-org/example-workflow/actions/runs/940463255",
        "node_id": "MDg6Q2hlY2tSdW4yODMyODUzNT55",
        "head_sha": "e3103f8eb03e1ad7f2331c5446b23c070fc54055",
        "url": "https://api.github.com/repos/octo-org/example-workflow/actions/jobs/2832853555",
        "html_url": "https://github.com/octo-org/example-workflow/runs/2832853555",
        "status": "in_progress",
        "conclusion": None,
        "started_at": "2021-06-15T19:22:27Z",
        "completed_at": None,
        "name": "Test workflow",
        "steps": [
          {
            "name": "Set up job",
            "status": "in_progress",
            "conclusion": None,
            "number": 1,
            "started_at": "2021-06-15T19:22:27.000Z",
            "completed_at": None
          }
        ],
        "check_run_url": "https://api.github.com/repos/octo-org/example-workflow/check-runs/2832853555",
        "labels": [
          "gpu",
          "db-app",
          "dc-03"
        ],
        "runner_id": 1,
        "runner_name": "my runner",
        "runner_group_id": 2,
        "runner_group_name": "my runner group"
      },
      "repository": {
        "id": 376034443,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNzYwMzQ0ND55",
        "name": "example-workflow",
        "full_name": "octo-org/example-workflow",
        "private": True,
        "owner": {
          "login": "octo-org",
          "id": 33435655,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjMzNDM1Nj55",
          "avatar_url": "https://avatars.githubusercontent.com/u/21031067?s=460&u=d851e01410b4f1674f000ba7e0dc94e0b82cd9cc&v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octo-org",
          "html_url": "https://github.com/octo-org",
          "followers_url": "https://api.github.com/users/octo-org/followers",
          "following_url": "https://api.github.com/users/octo-org/following{/other_user}",
          "gists_url": "https://api.github.com/users/octo-org/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octo-org/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octo-org/subscriptions",
          "organizations_url": "https://api.github.com/users/octo-org/orgs",
          "repos_url": "https://api.github.com/users/octo-org/repos",
          "events_url": "https://api.github.com/users/octo-org/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octo-org/received_events",
          "type": "Organization",
          "site_admin": False
        },
        "html_url": "https://github.com/octo-org/example-workflow",
        "description": "Test workflow",
        "fork": False,
        "url": "https://api.github.com/repos/octo-org/example-workflow",
        "forks_url": "https://api.github.com/repos/octo-org/example-workflow/forks",
        "keys_url": "https://api.github.com/repos/octo-org/example-workflow/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/octo-org/example-workflow/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/octo-org/example-workflow/teams",
        "hooks_url": "https://api.github.com/repos/octo-org/example-workflow/hooks",
        "issue_events_url": "https://api.github.com/repos/octo-org/example-workflow/issues/events{/number}",
        "events_url": "https://api.github.com/repos/octo-org/example-workflow/events",
        "assignees_url": "https://api.github.com/repos/octo-org/example-workflow/assignees{/user}",
        "branches_url": "https://api.github.com/repos/octo-org/example-workflow/branches{/branch}",
        "tags_url": "https://api.github.com/repos/octo-org/example-workflow/tags",
        "blobs_url": "https://api.github.com/repos/octo-org/example-workflow/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/octo-org/example-workflow/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/octo-org/example-workflow/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/octo-org/example-workflow/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/octo-org/example-workflow/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/octo-org/example-workflow/languages",
        "stargazers_url": "https://api.github.com/repos/octo-org/example-workflow/stargazers",
        "contributors_url": "https://api.github.com/repos/octo-org/example-workflow/contributors",
        "subscribers_url": "https://api.github.com/repos/octo-org/example-workflow/subscribers",
        "subscription_url": "https://api.github.com/repos/octo-org/example-workflow/subscription",
        "commits_url": "https://api.github.com/repos/octo-org/example-workflow/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/octo-org/example-workflow/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/octo-org/example-workflow/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/octo-org/example-workflow/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/octo-org/example-workflow/contents/{+path}",
        "compare_url": "https://api.github.com/repos/octo-org/example-workflow/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/octo-org/example-workflow/merges",
        "archive_url": "https://api.github.com/repos/octo-org/example-workflow/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/octo-org/example-workflow/downloads",
        "issues_url": "https://api.github.com/repos/octo-org/example-workflow/issues{/number}",
        "pulls_url": "https://api.github.com/repos/octo-org/example-workflow/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/octo-org/example-workflow/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/octo-org/example-workflow/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/octo-org/example-workflow/labels{/name}",
        "releases_url": "https://api.github.com/repos/octo-org/example-workflow/releases{/id}",
        "deployments_url": "https://api.github.com/repos/octo-org/example-workflow/deployments",
        "created_at": "2021-06-11T13:29:13Z",
        "updated_at": "2021-06-11T13:33:01Z",
        "pushed_at": "2021-06-11T13:32:58Z",
        "git_url": "git://github.com/octo-org/example-workflow.git",
        "ssh_url": "git@github.com:octo-org/example-workflow.git",
        "clone_url": "https://github.com/octo-org/example-workflow.git",
        "svn_url": "https://github.com/octo-org/example-workflow",
        "homepage": None,
        "size": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": None,
        "has_issues": True,
        "has_projects": True,
        "has_downloads": True,
        "has_wiki": True,
        "has_pages": False,
        "forks_count": 0,
        "mirror_url": None,
        "archived": False,
        "disabled": False,
        "open_issues_count": 0,
        "license": None,
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "main"
      },
      "organization": {
        "login": "octo-org",
        "id": 33435655,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMzNDM1Nj55",
        "url": "https://api.github.com/orgs/octo-org",
        "repos_url": "https://api.github.com/orgs/octo-org/repos",
        "events_url": "https://api.github.com/orgs/octo-org/events",
        "hooks_url": "https://api.github.com/orgs/octo-org/hooks",
        "issues_url": "https://api.github.com/orgs/octo-org/issues",
        "members_url": "https://api.github.com/orgs/octo-org/members{/member}",
        "public_members_url": "https://api.github.com/orgs/octo-org/public_members{/member}",
        "avatar_url": "https://avatars.githubusercontent.com/u/21031067?s=460&u=d851e01410b4f1674f000ba7e0dc94e0b82cd9cc&v=4",
        "description": "octo-org"
      },
      "sender": {
        "login": "octocat",
        "id": 319655,
        "node_id": "MDQ6VXNlcjMxOTY1NQ55",
        "avatar_url": "https://avatars.githubusercontent.com/u/21031067?s=460&u=d851e01410b4f1674f000ba7e0dc94e0b82cd9cc&v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/octocat",
        "html_url": "https://github.com/octocat",
        "followers_url": "https://api.github.com/users/octocat/followers",
        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
        "organizations_url": "https://api.github.com/users/octocat/orgs",
        "repos_url": "https://api.github.com/users/octocat/repos",
        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/octocat/received_events",
        "type": "User",
        "site_admin": True
      }
    })
    assert response.status == "200 OK"
